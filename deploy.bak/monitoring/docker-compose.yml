version: '3.2'
services:
  prometheus:
    image: prom/prometheus:latest
    restart: unless-stopped
    ports:
      - 9090:9090
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.retention.time=1y
      - --web.enable-lifecycle
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./prometheusRules.yml:/etc/prometheus/prometheusRules.yml:ro
      - /opt/thesisfair/data/prometheus:/prometheus
    depends_on:
      - alertmanager
      - node-exporter
      - cadvisor
    networks:
      - default
      - thesisfair

  alertmanager:
    image: prom/alertmanager
    restart: unless-stopped
    ports:
      - 9093:9093
    volumes:
      - ./alertmanager.yml:/etc/alertmanager/config.yml
    command:
      - --config.file=/etc/alertmanager/config.yml
      - --storage.path=/alertmanager

  node-exporter:
    image: prom/node-exporter:latest
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    expose:
      - 9100

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    restart: unless-stopped
    # ports:
    # - 8080:8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    depends_on:
      - redis

  redis:
    image: redis:latest
    restart: unless-stopped
    # ports:
    # - 6379:6379

  grafana:
    restart: unless-stopped
    image: grafana/grafana-oss
    volumes:
      - ./grafana.ini:/etc/grafana/grafana.ini:ro
      - /opt/thesisfair/data/grafana:/var/lib/grafana
    labels:
      traefik.enable: 'true'
      traefik.docker.network: 'thesisfair'
      traefik.http.routers.grafana.entrypoints: webSec
      traefik.http.routers.grafana.rule: Host(`${URL}`) && PathPrefix(`/grafana`)
      traefik.http.routers.grafana.middlewares: grafanaIpWhitelist
      traefik.http.middlewares.grafanaIpWhitelist.ipwhitelist.sourcerange: ${WHITELISTED_IPS}
    networks:
      - default
      - thesisfair

networks:
  default:
  thesisfair:
    name: thesisfair
    external: true
