version: '3'
services:
  traefik:
    image: traefik:2.8
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
      - 8080:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik.yml:/etc/traefik/traefik.yml:ro
      - ./dynamic-config:/dynamic-config:ro
      - ${FS_ROOT}/data/traefik:/data

  rabbitmq:
    image: rabbitmq:3-management
    restart: unless-stopped
    volumes:
      - ./rabbitmq.conf:/etc/rabbitmq/conf.d/11-custom.conf
    ports:
      - 15672:15672
      - 15692:15692

  mongodb:
    image: mongo
    restart: unless-stopped
    volumes:
      - ${FS_ROOT}/data/db:/data/db

    ports:
      - 27017:27017

  api-gateway:
    image: fnwicr.azurecr.io/thesisfair/api_gateway:latest
    restart: unless-stopped
    environment:
      - JWT_SECRET=${JWT_SECRET}
      - OPENID_ISSUER_URL=${OPENID_ISSUER_URL}
      - OPENID_CLIENT_ID=${OPENID_CLIENT_ID}
      - OPENID_CLIENT_SECRET=${OPENID_CLIENT_SECRET}
      - OPENID_REDIRECT_URL=${OPENID_REDIRECT_URL}
      - OPENID_RESOURCE=${OPENID_RESOURCE}
    labels:
      traefik.enable: 'true'
      traefik.http.routers.apiGateway.rule: Host(`${URL}`) && (PathPrefix(`/api`) || PathPrefix(`/sso`))
      traefik.http.routers.apiGateway.middlewares: apiGatewayStrip
      traefik.http.middlewares.apiGatewayStrip.stripprefix.prefixes: /api
    depends_on:
      - rabbitmq

  api-entity:
    image: fnwicr.azurecr.io/thesisfair/entity_service:latest
    restart: unless-stopped
    environment:
      - mongodbConStr=mongodb://mongodb/entity_service
    volumes:
      - ${FS_ROOT}/data/entityService:/app/data
    depends_on:
      - rabbitmq
      - mongodb

  api-event:
    image: fnwicr.azurecr.io/thesisfair/event_service:latest
    restart: unless-stopped
    environment:
      - mongodbConStr=mongodb://mongodb/event_service
    volumes:
      - ${FS_ROOT}/data/eventService:/app/data
    depends_on:
      - rabbitmq
      - mongodb

  frontend:
    image: fnwicr.azurecr.io/thesisfair/frontend_service:latest
    restart: unless-stopped
    labels:
      traefik.enable: 'true'
      traefik.http.routers.frontend.rule: Host(`${URL}`)

  api-project:
    image: fnwicr.azurecr.io/thesisfair/project_service:latest
    restart: unless-stopped
    environment:
      - mongodbConStr=mongodb://mongodb/project_service
    depends_on:
      - rabbitmq
      - mongodb

  api-user:
    image: fnwicr.azurecr.io/thesisfair/user_service:latest
    restart: unless-stopped
    environment:
      - mongodbConStr=mongodb://mongodb/user_service
      - jwtKey=${JWT_SECRET}
      - OVERRIDEMAIL=${OVERRIDEMAIL}
      - MAILHOST=${MAILHOST}
      - MAILPORT=${MAILPORT}
      - MAILUSER=${MAILUSER}
      - MAILPASS=${MAILPASS}
    volumes:
      - ${FS_ROOT}/data/userService:/app/data
    depends_on:
      - rabbitmq
      - mongodb

  api-vote:
    image: fnwicr.azurecr.io/thesisfair/vote_service:latest
    restart: unless-stopped
    environment:
      - mongodbConStr=mongodb://mongodb/vote_service
    depends_on:
      - rabbitmq
      - mongodb

  api-schedule:
    image: fnwicr.azurecr.io/thesisfair/schedule_service:latest
    restart: unless-stopped
    environment:
      - mongodbConStr=mongodb://mongodb/schedule_service
    depends_on:
      - rabbitmq
      - mongodb

networks:
  default:
    name: thesisfair
